{"ast":null,"code":"import _objectSpread from \"/Users/yu/pokemon-app_/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\n// Styles\nimport \"./VApp.css\";\n\n// Composables\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { createLayout, makeLayoutProps } from \"../../composables/layout.mjs\";\nimport { useRtl } from \"../../composables/locale.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\"; // Utilities\nimport { Suspense } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\";\nexport var makeVAppProps = propsFactory(_objectSpread(_objectSpread(_objectSpread({}, makeComponentProps()), makeLayoutProps({\n  fullHeight: true\n})), makeThemeProps()), 'VApp');\nexport var VApp = genericComponent()({\n  name: 'VApp',\n  props: makeVAppProps(),\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var theme = provideTheme(props);\n    var _createLayout = createLayout(props),\n      layoutClasses = _createLayout.layoutClasses,\n      getLayoutItem = _createLayout.getLayoutItem,\n      items = _createLayout.items,\n      layoutRef = _createLayout.layoutRef;\n    var _useRtl = useRtl(),\n      rtlClasses = _useRtl.rtlClasses;\n    useRender(function () {\n      return _createVNode(\"div\", {\n        \"ref\": layoutRef,\n        \"class\": ['v-application', theme.themeClasses.value, layoutClasses.value, rtlClasses.value, props[\"class\"]],\n        \"style\": [props.style]\n      }, [_createVNode(\"div\", {\n        \"class\": \"v-application__wrap\"\n      }, [_createVNode(Suspense, null, {\n        \"default\": function _default() {\n          var _slots$default;\n          return [_createVNode(_Fragment, null, [(_slots$default = slots[\"default\"]) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots)])];\n        }\n      })])]);\n    });\n    return {\n      getLayoutItem: getLayoutItem,\n      items: items,\n      theme: theme\n    };\n  }\n});","map":{"version":3,"names":["makeComponentProps","createLayout","makeLayoutProps","useRtl","makeThemeProps","provideTheme","Suspense","genericComponent","propsFactory","useRender","makeVAppProps","_objectSpread","fullHeight","VApp","name","props","setup","_ref","slots","theme","_createLayout","layoutClasses","getLayoutItem","items","layoutRef","_useRtl","rtlClasses","_createVNode","themeClasses","value","style","_default","_slots$default","_Fragment","call"],"sources":["../../../src/components/VApp/VApp.tsx"],"sourcesContent":["// Styles\nimport './VApp.sass'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { createLayout, makeLayoutProps } from '@/composables/layout'\nimport { useRtl } from '@/composables/locale'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { Suspense } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVAppProps = propsFactory({\n  ...makeComponentProps(),\n  ...makeLayoutProps({ fullHeight: true }),\n  ...makeThemeProps(),\n}, 'VApp')\n\nexport const VApp = genericComponent()({\n  name: 'VApp',\n\n  props: makeVAppProps(),\n\n  setup (props, { slots }) {\n    const theme = provideTheme(props)\n    const { layoutClasses, getLayoutItem, items, layoutRef } = createLayout(props)\n    const { rtlClasses } = useRtl()\n\n    useRender(() => (\n      <div\n        ref={ layoutRef }\n        class={[\n          'v-application',\n          theme.themeClasses.value,\n          layoutClasses.value,\n          rtlClasses.value,\n          props.class,\n        ]}\n        style={[\n          props.style,\n        ]}\n      >\n        <div class=\"v-application__wrap\">\n          <Suspense>\n            <>\n              { slots.default?.() }\n            </>\n          </Suspense>\n        </div>\n      </div>\n    ))\n\n    return {\n      getLayoutItem,\n      items,\n      theme,\n    }\n  },\n})\n\nexport type VApp = InstanceType<typeof VApp>\n"],"mappings":";;AAAA;AACA;;AAEA;AAAA,SACSA,kBAAkB;AAAA,SAClBC,YAAY,EAAEC,eAAe;AAAA,SAC7BC,MAAM;AAAA,SACNC,cAAc,EAAEC,YAAY,uCAErC;AACA,SAASC,QAAQ,QAAQ,KAAK;AAAA,SACrBC,gBAAgB,EAAEC,YAAY,EAAEC,SAAS;AAElD,OAAO,IAAMC,aAAa,GAAGF,YAAY,CAAAG,aAAA,CAAAA,aAAA,CAAAA,aAAA,KACpCX,kBAAkB,CAAC,CAAC,GACpBE,eAAe,CAAC;EAAEU,UAAU,EAAE;AAAK,CAAC,CAAC,GACrCR,cAAc,CAAC,IACjB,MAAM,CAAC;AAEV,OAAO,IAAMS,IAAI,GAAGN,gBAAgB,CAAC,CAAC,CAAC;EACrCO,IAAI,EAAE,MAAM;EAEZC,KAAK,EAAEL,aAAa,CAAC,CAAC;EAEtBM,KAAK,WAAAA,MAAED,KAAK,EAAAE,IAAA,EAAa;IAAA,IAATC,KAAA,GAAOD,IAAA,CAAPC,KAAA;IACd,IAAMC,KAAK,GAAGd,YAAY,CAACU,KAAK,CAAC;IACjC,IAAAK,aAAA,GAA2DnB,YAAY,CAACc,KAAK,CAAC;MAAtEM,aAAa,GAAAD,aAAA,CAAbC,aAAa;MAAEC,aAAa,GAAAF,aAAA,CAAbE,aAAa;MAAEC,KAAK,GAAAH,aAAA,CAALG,KAAK;MAAEC,SAAA,GAAAJ,aAAA,CAAAI,SAAA;IAC7C,IAAAC,OAAA,GAAuBtB,MAAM,CAAC,CAAC;MAAvBuB,UAAA,GAAAD,OAAA,CAAAC,UAAA;IAERjB,SAAS,CAAC;MAAA,OAAAkB,YAAA;QAAA,OAEAH,SAAS;QAAA,SACR,CACL,eAAe,EACfL,KAAK,CAACS,YAAY,CAACC,KAAK,EACxBR,aAAa,CAACQ,KAAK,EACnBH,UAAU,CAACG,KAAK,EAChBd,KAAK,SAAM,CACZ;QAAA,SACM,CACLA,KAAK,CAACe,KAAK;MACZ,IAAAH,YAAA;QAAA;MAAA,IAAAA,YAAA,CAAArB,QAAA;QAAA,oBAAAyB,SAAA;UAAA,IAAAC,cAAA;UAAA,QAAAL,YAAA,CAAAM,SAAA,UAAAD,cAAA,GAKOd,KAAK,WAAQ,cAAAc,cAAA,uBAAbA,cAAA,CAAAE,IAAA,CAAAhB,KAAgB,CAAC;QAAA;MAAA,MAK5B;IAAA,EAAC;IAEF,OAAO;MACLI,aAAa,EAAbA,aAAa;MACbC,KAAK,EAALA,KAAK;MACLJ,KAAA,EAAAA;IACF,CAAC;EACH;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}