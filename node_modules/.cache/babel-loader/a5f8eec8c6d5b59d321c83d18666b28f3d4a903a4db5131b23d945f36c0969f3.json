{"ast":null,"code":"import _regeneratorRuntime from \"/Users/yu/pokemon-app_/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/yu/pokemon-app_/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _defineProperty from \"/Users/yu/pokemon-app_/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Users/yu/pokemon-app_/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport { createStore } from 'vuex';\nimport axios from 'axios'; //Axios：他のサーバーとやりとりするためのツール\n\nexport default createStore({\n  state: {\n    pokemons: [],\n    loading: false,\n    searchQuery: '',\n    sortOrder: 'asc',\n    pokemonDetails: {}\n  },\n  mutations: {\n    SET_POKEMONS: function SET_POKEMONS(state, pokemons) {\n      state.pokemons = pokemons; //pokemonsをstateのpokemonsに流す\n    },\n    SET_LOADING: function SET_LOADING(state, loading) {\n      state.loading = loading; //loadingをstateのloadingに流す\n    },\n    SET_SEARCH_QUERY: function SET_SEARCH_QUERY(state, query) {\n      state.searchQuery = query; //queryをstateのsearchQueryに流す\n    },\n    SET_SORT_ORDER: function SET_SORT_ORDER(state, order) {\n      state.sortOrder = order; //orderをstateのsortOrderに流す\n    },\n    SET_POKEMON_DETAILS: function SET_POKEMON_DETAILS(state, _ref) {\n      var name = _ref.name,\n        details = _ref.details;\n      state.pokemonDetails = _objectSpread(_objectSpread({}, state.pokemonDetails), {}, _defineProperty({}, name, details)); //「...state.pokemonDetails」は前のstate.pokemonDetailsを引用。「[name]: details」でnameをキーとしたポケモンの詳細情報を追加\n    }\n  },\n  actions: {\n    fetchPokemons: function fetchPokemons(_ref2) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var commit, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref2.commit;\n              //以下を「fetchPokemons」としてmutationsにコミット\n              commit('SET_LOADING', true); //「SET_LOADING」にtrueの値をコミット\n              _context.prev = 2;\n              _context.next = 5;\n              return axios.get('https://pokeapi.co/api/v2/pokemon?limit=150');\n            case 5:\n              response = _context.sent;\n              //ポケモンAPIを呼び出し\n              commit('SET_POKEMONS', response.data.results); //「SET_POKEMONS」にAPIが返した結果をコミット\n              _context.next = 12;\n              break;\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](2);\n              //エラーの場合\n              console.error(_context.t0); //コンソールにエラー内容を表示\n            case 12:\n              _context.prev = 12;\n              //成功でもエラーでも以下を実行\n              commit('SET_LOADING', false); //「SET_LOADING」にfalseの値をコミット\n              return _context.finish(12);\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[2, 9, 12, 15]]);\n      }))();\n    },\n    fetchPokemonDetails: function fetchPokemonDetails(_ref3, name) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var commit, response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref3.commit;\n              _context2.prev = 1;\n              _context2.next = 4;\n              return axios.get(\"https://pokeapi.co/api/v2/pokemon/\".concat(name));\n            case 4:\n              response = _context2.sent;\n              //ポケモンAPIを呼び出し（各ポケモンの個別データ）\n              commit('SET_POKEMON_DETAILS', {\n                name: name,\n                details: response.data\n              }); //「SET_POKEMON_DETAILS」のnameにAPIが返した結果をコミット（nameはポケモンの名前、dataは各ポケモンの詳細データ。それぞれが入っている）\n              _context2.next = 11;\n              break;\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.error(_context2.t0); //エラーの場合、コンソールにエラー内容を表示\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[1, 8]]);\n      }))();\n    }\n  },\n  getters: {\n    filteredPokemons: function filteredPokemons(state) {\n      //以下の処理を「filteredPokemons」として呼び出せるようにする\n      var filtered = state.pokemons.filter(function (pokemon) {\n        return (\n          //以下を「filtered」とする。配列「pokemons」を絞り込みする。配列のなかの一つのアイテム「pokemon」に対して以下の処理をする\n          pokemon.name.toLowerCase().includes(state.searchQuery.toLowerCase())\n        );\n      } //searchQueryを小文字に変換した文字列が、nameを小文字に変換した文字列に入っている場合（そのアイテムを「filtered」とする）\n      );\n      if (state.sortOrder === 'asc') {\n        //「sortOrder」が「asc」の場合、\n        filtered.sort(function (a, b) {\n          return a.name.localeCompare(b.name);\n        }); //「filtered」アイテムを昇順に並べ替え。「a」「b」はなんでもよい。連続したオブジェクトを比較している。\n      } else {\n        filtered.sort(function (a, b) {\n          return b.name.localeCompare(a.name);\n        }); //「filtered」アイテムを降順に並べ替え\n      }\n      return filtered; //filteredを返す\n    },\n    loading: function loading(state) {\n      return state.loading;\n    },\n    //stateのloadingを「loading」として呼び出せるようにする\n    pokemonDetails: function pokemonDetails(state) {\n      return function (name) {\n        return state.pokemonDetails[name];\n      };\n    } //stateのpokemonDetails[name]をpokemonDetailsとして呼び出せるようにする\n  }\n});","map":{"version":3,"names":["createStore","axios","state","pokemons","loading","searchQuery","sortOrder","pokemonDetails","mutations","SET_POKEMONS","SET_LOADING","SET_SEARCH_QUERY","query","SET_SORT_ORDER","order","SET_POKEMON_DETAILS","_ref","name","details","_objectSpread","_defineProperty","actions","fetchPokemons","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","commit","response","wrap","_callee$","_context","prev","next","get","sent","data","results","t0","console","error","finish","stop","fetchPokemonDetails","_ref3","_callee2","_callee2$","_context2","concat","getters","filteredPokemons","filtered","filter","pokemon","toLowerCase","includes","sort","a","b","localeCompare"],"sources":["/Users/yu/pokemon-app_/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\nimport axios from 'axios'; //Axios：他のサーバーとやりとりするためのツール\n\nexport default createStore({\n  state: {\n    pokemons: [],\n    loading: false,\n    searchQuery: '',\n    sortOrder: 'asc',\n    pokemonDetails: {},\n  },\n  mutations: {\n    SET_POKEMONS(state, pokemons) {\n      state.pokemons = pokemons; //pokemonsをstateのpokemonsに流す\n    },\n    SET_LOADING(state, loading) {\n      state.loading = loading; //loadingをstateのloadingに流す\n    },\n    SET_SEARCH_QUERY(state, query) {\n      state.searchQuery = query; //queryをstateのsearchQueryに流す\n    },\n    SET_SORT_ORDER(state, order) {\n      state.sortOrder = order; //orderをstateのsortOrderに流す\n    },\n    SET_POKEMON_DETAILS(state, { name, details }) {\n      state.pokemonDetails = { ...state.pokemonDetails, [name]: details }; //「...state.pokemonDetails」は前のstate.pokemonDetailsを引用。「[name]: details」でnameをキーとしたポケモンの詳細情報を追加\n    },\n  },\n  actions: {\n    async fetchPokemons({ commit }) { //以下を「fetchPokemons」としてmutationsにコミット\n      commit('SET_LOADING', true); //「SET_LOADING」にtrueの値をコミット\n      try {\n        const response = await axios.get('https://pokeapi.co/api/v2/pokemon?limit=150'); //ポケモンAPIを呼び出し\n        commit('SET_POKEMONS', response.data.results); //「SET_POKEMONS」にAPIが返した結果をコミット\n      } catch (error) { //エラーの場合\n        console.error(error); //コンソールにエラー内容を表示\n      } finally { //成功でもエラーでも以下を実行\n        commit('SET_LOADING', false); //「SET_LOADING」にfalseの値をコミット\n      }\n    },\n    async fetchPokemonDetails({ commit }, name) { //以下を「fetchPokemonDetails」としてmutationsのnameにコミット\n      try {\n        const response = await axios.get(`https://pokeapi.co/api/v2/pokemon/${name}`); //ポケモンAPIを呼び出し（各ポケモンの個別データ）\n        commit('SET_POKEMON_DETAILS', { name, details: response.data }); //「SET_POKEMON_DETAILS」のnameにAPIが返した結果をコミット（nameはポケモンの名前、dataは各ポケモンの詳細データ。それぞれが入っている）\n      } catch (error) {\n        console.error(error); //エラーの場合、コンソールにエラー内容を表示\n      }\n    },\n  },\n  getters: {\n    filteredPokemons: (state) => { //以下の処理を「filteredPokemons」として呼び出せるようにする\n      let filtered = state.pokemons.filter(pokemon => //以下を「filtered」とする。配列「pokemons」を絞り込みする。配列のなかの一つのアイテム「pokemon」に対して以下の処理をする\n        pokemon.name.toLowerCase().includes(state.searchQuery.toLowerCase()) //searchQueryを小文字に変換した文字列が、nameを小文字に変換した文字列に入っている場合（そのアイテムを「filtered」とする）\n      );\n      if (state.sortOrder === 'asc') { //「sortOrder」が「asc」の場合、\n        filtered.sort((a, b) => a.name.localeCompare(b.name)); //「filtered」アイテムを昇順に並べ替え。「a」「b」はなんでもよい。連続したオブジェクトを比較している。\n      } else {\n        filtered.sort((a, b) => b.name.localeCompare(a.name)); //「filtered」アイテムを降順に並べ替え\n      }\n      return filtered; //filteredを返す\n    },\n    loading: (state) => state.loading, //stateのloadingを「loading」として呼び出せるようにする\n    pokemonDetails: (state) => (name) => state.pokemonDetails[name], //stateのpokemonDetails[name]をpokemonDetailsとして呼び出せるようにする\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}